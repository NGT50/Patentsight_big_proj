name: CD backend → EC2 (CICD)
 
on:
  push:
    branches: [ "CICD" ]      # CICD 브랜치에 푸시될 때만
    paths:
      - "backend/**"          # backend 변경시에만 트리거
  workflow_dispatch:          # 수동 실행 버튼

concurrency:
  group: cd-ec2-backend
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Make gradlew executable
        working-directory: backend
        run: chmod +x gradlew

      - name: Build (Gradle bootJar)
        working-directory: backend
        run: ./gradlew clean bootJar -x test

      - name: Find artifact (jar path)
        id: findjar
        shell: bash
        run: |
          JAR=$(ls -t backend/build/libs/*.jar | head -n 1)
          echo "jar=$JAR" >> $GITHUB_OUTPUT
          echo "Found JAR: $JAR"

      - name: Ensure releases dir exists on EC2
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            mkdir -p /home/${{ secrets.USERNAME }}/app/releases

      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          source: ${{ steps.findjar.outputs.jar }}
          target: /home/${{ secrets.USERNAME }}/app/releases/
          strip_components: 3
          overwrite: true

      - name: Restart service on EC2
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            set -e
            APP_DIR="/home/${{ secrets.USERNAME }}/app"
            
            # releases 폴더에서 가장 최신 JAR 파일의 전체 경로를 찾습니다.
            LATEST_JAR=$(ls -t "$APP_DIR"/releases/*.jar | head -n 1)
            echo "Latest jar: $LATEST_JAR"
            
            # JAR 파일이 없는 경우 에러를 발생시키고 중단합니다.
            if [ -z "$LATEST_JAR" ]; then
              echo "ERROR: No jar found under $APP_DIR/releases"; exit 1
            fi
            
            # deploy.sh 스크립트에 최신 JAR 파일 경로를 인자로 전달하여 실행합니다.
            "$APP_DIR"/deploy.sh "$LATEST_JAR"
            
            # [수정] Health Check: Spring Security로 인해 actuator/health 접근 시 401 인증 오류가 발생하고,
            # 이로 인해 배포가 지연되거나 실패하는 것처럼 보이므로 해당 부분을 제거합니다.
            # 배포 성공 여부는 EC2 서버 접속 또는 실제 서비스 접속으로 확인하는 것이 더 확실합니다.
            # sleep 2
            # curl -fsS "http://127.0.0.1:${APP_PORT:-8080}/actuator/health" || curl -fsS "http://127.0.0.1:${APP_PORT:-8080}" || true
