name: CD backend → EC2 (CICD)
 
on:
  push:
    branches: [ "CICD" ]      # CICD 브랜치에 푸시될 때만
    paths:
      - "backend/**"          # backend 변경시에만 트리거
  workflow_dispatch:          # 수동 실행 버튼

concurrency:
  group: cd-ec2-backend
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Make gradlew executable
        working-directory: backend
        run: chmod +x gradlew

      - name: Get short Git hash
        id: vars
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build (Gradle bootJar)
        working-directory: backend
        # [수정] --refresh-dependencies 옵션을 추가하여 손상된 캐시를 무시하고 모든 라이브러리를 새로 받도록 강제합니다.
        run: ./gradlew clean bootJar -x test --refresh-dependencies
        
      - name: Find artifact (jar path)
        id: findjar
        shell: bash
        run: |
          JAR=$(ls -t backend/build/libs/*.jar 2>/dev/null | grep -v plain | head -n 1)

          if [ -z "$JAR" ]; then
            echo "Jar not found" >&2
            exit 1
          fi
          echo "jar=$JAR" >> $GITHUB_OUTPUT
          echo "Found JAR: $JAR"

      - name: Ensure releases dir exists on EC2
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            mkdir -p /home/${{ secrets.USERNAME }}/app/releases

      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          source: ${{ steps.findjar.outputs.jar }}
          target: /home/${{ secrets.USERNAME }}/app/releases/
          strip_components: 3
          overwrite: true

      - name: Restart service on EC2
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            set -e
            APP_DIR="/home/${{ secrets.USERNAME }}/app"
            JAR_NAME=$(basename "${{ steps.findjar.outputs.jar }}")
            TARGET_JAR="$APP_DIR/releases/$JAR_NAME"
            echo "Deploying: $TARGET_JAR"

            if [ ! -f "$TARGET_JAR" ]; then
              echo "ERROR: $TARGET_JAR not found"; exit 1
            fi

            "$APP_DIR"/deploy.sh "$TARGET_JAR"
