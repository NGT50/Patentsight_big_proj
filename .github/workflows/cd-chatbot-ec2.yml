name: CD chatbot → EC2 (CICD)
 
on:
  push:
    branches: [ "CICD" ]      # CICD 브랜치에 푸시될 때만
    paths:
      - "chatbot/**"          # chatbot 변경시에만 트리거
  workflow_dispatch:          # 수동 실행 버튼

concurrency:
  group: cd-ec2-chatbot
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Get short Git hash
        id: vars
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Install dependencies
        working-directory: chatbot
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ensure chatbot dir exists on EC2
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            mkdir -p /home/${{ secrets.USERNAME }}/chatbot

      - name: Upload chatbot files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          source: chatbot/
          target: /home/${{ secrets.USERNAME }}/chatbot/
          strip_components: 1
          overwrite: true

      - name: Install Python and dependencies on EC2
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            # Python 설치
            sudo apt-get update
            sudo apt-get install -y python3 python3-pip python3-venv
            
            # Python 심볼릭 링크 생성
            sudo ln -sf /usr/bin/python3 /usr/bin/python
            sudo ln -sf /usr/bin/pip3 /usr/bin/pip
            
            # 챗봇 디렉토리로 이동
            cd /home/${{ secrets.USERNAME }}/chatbot
            
            # 가상환경 생성 및 활성화
            python3 -m venv venv
            source venv/bin/activate
            
            # 의존성 설치
            pip install --upgrade pip
            pip install -r requirements.txt

      - name: Restart chatbot service on EC2
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            set -e
            CHATBOT_DIR="/home/${{ secrets.USERNAME }}/chatbot"
            echo "Deploying chatbot to: $CHATBOT_DIR"

            if [ ! -d "$CHATBOT_DIR" ]; then
              echo "ERROR: $CHATBOT_DIR not found" >&2
              exit 1
            fi

            cd "$CHATBOT_DIR"

            # 실행 중인 챗봇 프로세스 종료
            PIDS=$(ps -eo pid,comm,args | awk '$2=="python" && $0 ~ /run_chatbot.py/ {print $1}' || true)
            if [ -n "$PIDS" ]; then
              echo "> 실행 중인 챗봇 서버(PID: $PIDS)를 종료합니다."
              echo "$PIDS" | xargs -r kill || true
              sleep 2
            fi

            # 가상환경 활성화
            source venv/bin/activate
            
            # 챗봇 서버 백그라운드에서 실행
            echo "> 챗봇 서버를 시작합니다."
            nohup python run_chatbot.py > chatbot.log 2>&1 &
            CHATBOT_PID=$!
            echo "챗봇 서버 PID: $CHATBOT_PID"

            # 서버 시작 대기
            sleep 5

            # 서버 상태 확인
            if curl -f http://localhost:58080/health > /dev/null 2>&1; then
              echo "✅ 챗봇 서버가 성공적으로 시작되었습니다."
            else
              echo "❌ 챗봇 서버 시작에 실패했습니다."
              exit 1
            fi


