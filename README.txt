1. '개인_AI_코드' 폴더는 각각의 EC2(혹은 colab) 환경에서 구동되어 메인 서비스에 외부 API 형식으로 활용되던 코드를 붙여놓은 것입니다.
2. '사용데이터_예시' 폴더는 데이터셋은 총 용량이 3~40기가에 육박해, 분리 가능한 데이터만 셈플로 추출하여 만들었습니다.
3. 'docs' 폴더는 API 정의서 등 개발에 활용했던 문서 자료들을 업로드 해놨습니다.

---

# 📘 Patentsight - 멀티모달 기반 특허 자동 분석 및 AI 어시스턴스 시스템

## 📌 프로젝트 소개
**Patentsight**는 특허 문서 심사 및 출원 과정을 AI로 지원하는 시스템입니다.  
B2G(Business to Government) 기반으로 특허청 업무에 특화된 AI 어시스턴트 서비스를 제공하며,  
**출원인**과 **심사관** 모두의 업무 효율성을 높이는 것을 목표로 합니다.

> “AI로 특허 심사·출원의 효율성과 품질을 높이다”

---

## 🎯 주요 기능
### 출원인 측면
- 📝 LLM 기반 출원서 자동 생성 / 검토 / 수정  
- 🔍 멀티모달 유사특허 검색 (텍스트 + 이미지 기반)  
- 🖼️ 2D 이미지 → 3D 도면 변환  

### 심사관 측면
- 🤖 챗봇 기반 출원 서류 스크리닝  
- 📑 심사 결과 통지서 자동 생성 (RAG 기반 근거 포함)  
- 📊 IPC 자동 분류 및 심사관 자동 배정  

---

## 📚 데이터셋
- 실제 특허 데이터 6백만 건 활용  
- KIPRIS API 및 오픈 특허 데이터 기반  
- 자체 구축 벡터 데이터베이스 (FAISS) 적용  

---

## 🛠 기술 스택
### Frontend
- React 18, Vite  
- Material UI (MUI)

### Backend
- Spring Boot 3.3  
- FastAPI 0.115  
- MySQL 8.0 (AWS RDS), S3  
- RESTful API, JWT 기반 인증

### AI / ML
- PyTorch, TensorFlow, Hugging Face  
- KorPatElectra (특허 한국어 데이터셋 임베딩)  
- CLIP (이미지-텍스트 멀티모달 검색)  
- GPT + SBERT 하이브리드 (IPC 분류)  
- Hunyuan3D (2D 이미지 → 3D 변환)  
- FAISS (벡터 검색 DB)

---

## 📂 서비스 프로세스
1. 출원인 심사 청구  
2. AI 기반 문서 초안 생성 및 오류 검출  
3. 심사관 배정 및 심사 진행 (IPC 자동 분류, RAG 기반 거절 사유 생성)  
4. 최종 등록 / 거절 결정  

---

## 📈 성능 지표
- IPC 자동 분류 정확도: **92~96%**  
- 3D 변환 속도: **기존 40~50초 → 6~10초**  
- 출원서 작성 시간: **평균 3~5시간 단축**  
- 등록 성공률: **10~20%p 향상**  

---
